<div class="w-100 p-3 py-2">

	<div class="" id="landingSearch">
		<div class="d-flex flex-row justify-content-center">
			<div class="col-md-10 text-center">
				<h2>
					Welcome to Royals LLC. Web3
				</h2>
				<p>
					Begin by searching an Eth address below.
				</p>

				<div class="d-flex flex-row justify-content-center">
					<div class="">
						<input id="address_lookup_search_start" autocomplete="on" class="form-control me-2"  type="search" placeholder="search ETH/ENS address" aria-label="Search">
					</div>
					<div class="float-left">
						<button id="address_lookup_search_button" value="address_lookup_search_start" onclick="search_address(this.value);" class="btn bg-black text-white" type="submit"><i class="fa fa-magnifying-glass"></i></button>
					</div>

				</div>

			</div>
		</div>
	</div>

	<div class="d-flex row mx-0 px-0 ">
		<div class="row mx-0">
			<div class="col text-start float-start">
				<p class="p2 fw-bold py-0">Tokens</p>
			</div>
			<div class="col p-0 d-none text-center d-sm-block">
				<p class="p2 fw-bold py-0 text-center">7D Trend</p>
			</div>
			<div class=" col px-0 text-end float-end">
				<div class="col-6 px-0 text-end float-end">
					<p class="p2 fw-bold py-0 text-nowrap">Balance <abbr class="is-size-7 fw-normal text-muted" id="refresh_wallet_counter" title="Seconds since last refresh">0</abbr></p>
				</div>
			</div>
		</div>
		<div id="wallet_tokens" class="d-flex row mx-0">

		</div>

		<div class="row mx-0">
			<div class="col text-start float-start">
				<p class="p2 fw-bold py-0">Total</p>
			</div>
			<div class="col p-0 d-none text-center d-sm-block">
				<p class="p2 fw-bold py-0 text-center"> </p>
			</div>
			<div class=" col px-0 text-end float-end">
				<div class="col-6 px-0 text-end float-end">
					<p class="p2 fw-bold py-0 text-nowrap" id="wallet_total_balance">Balance</p>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	let refresh_wallet_counter_seconds = 0;
	let refresh_wallet_counter_first_run = true;
	async function get_wallet_tokens()//eth_address
	{
		let eth_address= address;//document.getElementById('address_lookup_search').value;
		let wallet_tokens_api_url = `/web3/api/wallet_tokens?address=${eth_address}`;

		let headers = new Headers();
		headers.set('Content-type', 'application/json');
		const wallet_tokens_api_options =
		{
			method: 'GET',
			headers: headers,
		};

		let wallet_tokens_api_call = await fetch(wallet_tokens_api_url, wallet_tokens_api_options);
		let wallet_tokens_api_call_text = await wallet_tokens_api_call.text();
		const wallet_tokens_api_response_json_obj = JSON.parse(wallet_tokens_api_call_text);

		for (let i = 0; i < wallet_tokens_api_response_json_obj.length; i++)
		{
			let token_name = wallet_tokens_api_response_json_obj[i].token.name;
			let token_symbol = wallet_tokens_api_response_json_obj[i].token.symbol;
			let token_balance = wallet_tokens_api_response_json_obj[i].token.balance;
			let token_id = wallet_tokens_api_response_json_obj[i].token.id;
			let token_platform = wallet_tokens_api_response_json_obj[i].token.platform;
			let token_contract = wallet_tokens_api_response_json_obj[i].token.contract;

			if(!coingecko_ids_to_track.includes(coingecko_ids_to_track))
			{
				coingecko_ids_to_track.push(token_id);
			}

			if(document.getElementById(`wallet_${token_id}`) == null && token_balance>0.000001)
			{
				let wallet_token_row = `
				<div id="wallet_${token_id}" class="row px-0 py-0 mx-0 d-flex flex-nowrap border-bottom" style="">
				    	<div class="py-1 col flex-nowrap" style="text-align: left;">
						<div class="d-flex flex-row">
							<div class="p-1">
								<div  class="align-middle ratio ratio-1x1 p-1" style="width:2.5rem;">
									<img id="wallet_${token_id}_image" src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/HD_transparent_picture.png/64px-HD_transparent_picture.png" style="object-fit: cover; padding-right: 0; padding-left: 0;" class="align-middle card-img-top">
								</div>
							</div>
							<div class="px-1" style="max-width:85%">
								<div class="text-uppercase fw-bold" id="wallet_${token_id}_Name">
									${token_symbol} <span id="wallet_${token_id}_Price"></span>
								</div>
								<div class="fw-semibold text-muted text-truncate" style="max-width:170px;" id="wallet_${token_id}_Ticker">
									${token_name}
								</div>
							</div>
						</div>
		  			</div>

					<div class="col p-0 d-none d-sm-block" stye="height: 3rem;">
						<canvas  style="display: block;width: inherit !important; height: 3rem;" id="wallet_${token_id}_chart"></canvas>
					</div>

				    	<div class="col py-0 px-1 g-" style="text-align: right;" >
						<div class="w100 w-100 fw-semibold" id="wallet_${token_id}_balance">
							${nFormatter(token_balance,3)}
						</div>
						<div class="w100 w-100 text-muted placeholder-glow fw-semibold" id="wallet_${token_id}_balance_usd">
							<span class="placeholder col-2"></span>
						</div>

					</div>
			  	</div>
				`;
					document.getElementById("wallet_tokens").innerHTML += wallet_token_row;
			}
			else
			{
				if(document.getElementById(`wallet_${token_id}_balance`)!=null)
				{
					document.getElementById(`wallet_${token_id}_balance`).innerHTML = nFormatter(token_balance,3);
					document.getElementById(`wallet_${token_id}_balance_usd`).innerHTML = `<span class="placeholder col-2"></span>`;
				}
			}
		}
		//refresh_wallet_counter_seconds=0;
		if(refresh_wallet_counter_first_run)
		{
			refresh_wallet_counter();
			refresh_wallet_counter_first_run = false;
		}
		else
		{
			refresh_wallet_counter_seconds=0;
		}
	}

	//refresh counter since successful api call
	async function refresh_wallet_counter()
	{
		while (true)
		{
			document.getElementById("refresh_wallet_counter").innerHTML = refresh_wallet_counter_seconds;
			refresh_wallet_counter_seconds++;

			if(refresh_wallet_counter_seconds==60)
			{
				get_wallet_tokens();
				refresh_wallet_counter_seconds=0;
			}
			await sleep(1000);
		}
	}
</script>
